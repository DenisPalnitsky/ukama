name: build-web
on:
  push:

jobs:
  build:

    name: build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        # init vars required for tag generation
      - name: Init vars
        id: vars_step
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: Build web
        run: make build

      - name: Test
        run: make test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_REGISTRY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_REGISTRY_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # push image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            003664043471.dkr.ecr.us-east-1.amazonaws.com/web:${{ steps.vars_step.outputs.sha_short }}
            003664043471.dkr.ecr.us-east-1.amazonaws.com/web:${{ steps.vars_step.outputs.branch }}-${{ github.run_number }}

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir:  ${{ env.working-directory }}
          args: >
            -Dsonar.organization=ukama
            -Dsonar.projectKey=ukama_ukamaX_api-gateway
            -Dsonar.projectName=${{ env.working-directory }}
            -Dsonar.go.coverage.reportPaths=coverage.out
            -D
  lint:
    name: lint
    runs-on: ubuntu-latest
    env:
      working-directory: web
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies
        run: yarn install

      - name: Run linters
        run: yarn lint

  release:
    name: release
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    env:
      working-directory: web
    steps:
      # init vars required for tag generation
      - uses: actions/checkout@v2
      - name: Init vars
        id: vars_step
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      - name: update gitops
        uses: denispalnitsky/gitops-release@v7
        with:
          filename: 'releases/ukamax-helmfile.yaml'
          key: 'webImageTag'
          value: ${{ steps.vars_step.outputs.sha_short }}
          github-token: ${{ secrets.UKAMA_BOT_GITHUB_TOKEN }}
          github-org-and-repo: 'ukama/infra-as-code'
          github-user-mail: "ukama-bot@ukama.com"
          github-username: "ukama-bot"
